# Sound
Videoâ€¢
. Duration: 5 minutes
5 min

URL: https://www.coursera.org/learn/uol-introduction-to-programming-1/lecture/ReJnf/sound

## VIDEO TRANSCRIPT ## You may navigate through the transcript using tab. To save a note for a section of text press CTRL + S. To expand your selection you may use CTRL + arrow key. You may contract your selection using shift + CTRL + arrow key. For screen readers that are incompatible with using arrow keys for shortcuts, you can replace them with the H J K L keys. Some screen readers may require using CTRL in conjunction with the alt key I'm now going to show you how you can add sound onto your game projects. To be able to do this, you would need to download a different template. So, I've got this from next to this video. You can download it, open up in brackets. In here, we are going to load a sound, and we're just going to play it whenever the user clicks a button. So, I've got this running already. If I press Space, you hear what's going to be our character jump sound. So, there's a few different things going on in this sketch. If you have a look on the left, you will see that we've got an extra asset file in our folder and it's p5.sound.min. So, this is in extra file of the P5 library which is there to help us play sounds. Now, we normally shy away from telling you to look in index, but if you do this now, you'll see as well as the script source for P5. We've also got a script source for sound and our sketch file, and in that sketch file, we've got a variable called jumpSound, and we've also got a preload function. Now, we haven't really told you about the preload function either. What it does is before setup is called, preload is there to load up any assets that we may have in our sketch. So, sounds, images, you might have seen this in some of the sleeve sketches and wondered what it was doing. What it means is that these assets, which might take a little while to get into our program, are there ready as soon as setup is called. So, in this function, we are setting the sound formats. Now, we're going to accept MP3 or WAV files. You could also put organ here, but we tend to avoid that because it's not compatible across all browsers, and we can also have our loadSound. So, we've got jumpSound and we are going to load the sound file called assets/jump.wav into our program. So, if you have a look in my finder, you'll see this is the sound template folder, and I've got in here a folder called assets. So, inside sound template, there's a folder called assets, and in here is the jump.wav file. So, this is just a link to where this file is on your computer. Now, I recommend that you only do this as a relative link. So, you can see that I haven't put in here going back into my home directory and how that sits within my computer. It's just relative to where the sketch file is. So, it's in a folder called assets/jump.wav, and we're also setting the volume there as well. So, we then got a standard setup function and a keyPressed function. When the user presses the key, it's going to play that sound file. So, if we want to add this into our game projects, what we have to do is open up our game projects six or wherever you last finished editing your game, and we need to copy and paste the contents of this into our new sketch file. So, let's start by doing that. So, let's copy all of these commands here and let's paste it there, and then preload. We can leave exactly as it is, but setup, we're missing a few bits. So, we need to set the lives and call start game. So, let's copy and paste those into setup, and then pretty much from here down, we can just select everything, and that we're going to just copy all into this new template. So, let's copy that and let's paste it on the setup, and we can get rid of this keyPressed function here now too. So, let's paste that in. So, if we run this, we will see our game character, and as of yet, it's not playing the jump sound. So, what we need to do is find in here our keyPressed function. Say, let's scroll up to keyPressed. That's keyReleased. That's keyPressed. This is the piece of code here. So, when the user presses either space or the W key, we are going to lift the game character, and we'll change the value of isFalling. So, right here, if we call jumpSound.play. So, exactly as it was in the original key press function, but we're only going to do it when the W key or the Space key is called. So, let's save that, and then if we move our character around, no sound is played until I press the jump function jump key, and it will jump and play our sound. So, you can add this to other items. So you can have a new sound file loaded in for when you pick up a collectible. You can have a different sound file for when the character falls down the canyon or he hits the flagpole, or you can even do background music. The P5 sound library has a loop function. So, you can have a piece of music that carries on playing throughout the game. ## END TRANSCRIPT ## ## ADDITIONAL PAGE CONTENT ## Lesson 9.3 Code Philosophy Lesson 9.4 Game project 7: make it awesome Reading: Reading Code editor: reminder about Visual Studio Code . Duration: 10 minutes 10 min Reading: Reading Game project part 7: make it awesome . Duration: 1 hour 1h Video: Video Sound . Duration: 5 minutes 5 min Discussion Prompt: Game project part 7 . Duration: 20 minutes 20 min Lesson 9.5 Continuing with Sleuth
# Find the highest / lowest value
Videoâ€¢
. Duration: 7 minutes
7 min

URL: https://www.coursera.org/learn/uol-introduction-to-programming-1/lecture/L1urY/find-the-highest-lowest-value

## VIDEO TRANSCRIPT ## You may navigate through the transcript using tab. To save a note for a section of text press CTRL + S. To expand your selection you may use CTRL + arrow key. You may contract your selection using shift + CTRL + arrow key. For screen readers that are incompatible with using arrow keys for shortcuts, you can replace them with the H J K L keys. Some screen readers may require using CTRL in conjunction with the alt key Previously, we've looked at selecting a particular value from an array. In this video, we're going to look at the highest or the lowest value from an array. So, I've got here a sketch and instead of having a great big long array at the start of it, I'm using a little for loop to push random values into that array. So, we are putting 100 values into it between zero and 1,000, and I've rounded these values, so they are going to be integers, whole numbers. So, let's start by looking for the highest value in that array. So, we're going to need a for loop. But first, let's create a variable called highestValue and we also need a variable for the highest index, so where that value is stored within the array. So, the highestIndex, I will also set that to zero. So, if I go through the for loop, for i is equal to zero, i is going to be less than the length of that array, which is called numArray.length and then i plus plus. Now, let's neat this up. So, each value that I get through, I'm going to want to test whether it is higher than the previous highest value that I've seen. So, to begin with, that's going to be zero, and if I get a number say 10, which is bigger than zero, I will store that value into the highestValue variable and also store the index. So, let's do that. So, if numArray index i is greater than highestValue, then I am going to want to save that value to my highestValue equals numArray i, and then let's set the highestIndex equal to i. Now, when I get to the end of my for loop, hopefully, I will have found the largest value in the array and its index. So, let's just print those out, console.log, the highest value in numArray is plus highestValue, plus its index is plus highestIndex. Let's see whether that works. So, the highestValue is 967 and is at the index 23. So, let's check this. Let's just numArray, let's print that out here. If we look for 23, it saying 967. Yeah, but looks like it's going to be the highest, I can't see anything bigger. Your output will be different remember, because we've used a random array. In fact, if I run this again, if I refresh this, will see 994 at the index of 17. So, each time you run this, you're going to get a different result. All right. Now, let's think about how to get that smallestValue. So, you might be tempted to just create a smallestValue and set that to zero, and the smallestIndex and set that to zero as well. Unfortunately, this isn't going to work because the smallestValue we might have might be zero. We could set it to minus one. But what happens if I want to change the parameters of this and I want to make my numArray store values from minus 1,000 to 1,000? It's not going to work always. So, the best thing to do is to set this value to null initially. So, if you remember back to a few topics ago, null means that there's nothing stored there. The variable is being created, it's been assigned to nothing. So, what I can do here is put another if statement into this for loop and say, if smallestValue is equal to null or smallestValue, or actually let's do it the same way round as previously so it looks neat. NumArray at index i is less than the smallestValue, then we can do the same thing. We can say smallestValue is equal to numArray i, and the smallestIndex is equal to i. Let's run that. Let's put a console.log in first so we actually know if he's doing the right thing. So, console.log split the smallestValue in numArray is plus smallestValue and then add onto that, that it's index is plus smallestIndex. So, let's see how this works. So, it's saying that the smallestValue in numArray is false. So, we've got something not quite right here. Let's have a look and see if we can spot what's wrong with the code, and in fact, yes, and it's a bug that I'm sure lots of you have made. I think we even told you about trying to avoid this one a couple of times, but yet, still made it ourselves. So, that should be of course, equal to null, because we are making a comparison, we're not making an assignment. So, let's try that, and of course, I've still got the breakpoints in this, Just ignore those. So, yeah, this looks like it's hopefully working this time. So, the smallestValue in the numArray is zero and its index is 65. Let's type out numArray here and let's see if we can find 65 and see if that zero. So, at index 65, yeah, we've got a value of zero. So, that's how you would look for the largest and smallest values in an array. In the next video, we're going to look at how you might want to skip over certain values in the array, if we only want to apply an operation to some of them as we iterate through it. ## END TRANSCRIPT ## ## ADDITIONAL PAGE CONTENT ## Lesson 8.1 Two dimensional arrays Lesson 8.2 Nesting objects and arrays Lesson 8.3 patterns Video: Video Find the matching value . Duration: 4 minutes 4 min Video: Video Find the highest / lowest value . Duration: 7 minutes 7 min Video: Video Exclude a set of values . Duration: 5 minutes 5 min Reading: Reading Hack it: Robot upgrade . Duration: 30 minutes 30 min Practice Assignment: patterns . Duration: 12 minutes 12 min
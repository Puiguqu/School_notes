# Sleuth case by case 802
Videoâ€¢
. Duration: 5 minutes
5 min

URL: https://www.coursera.org/learn/uol-introduction-to-programming-1/lecture/9lCLy/sleuth-case-by-case-802

## VIDEO TRANSCRIPT ## You may navigate through the transcript using tab. To save a note for a section of text press CTRL + S. To expand your selection you may use CTRL + arrow key. You may contract your selection using shift + CTRL + arrow key. For screen readers that are incompatible with using arrow keys for shortcuts, you can replace them with the H J K L keys. Some screen readers may require using CTRL in conjunction with the alt key I've downloaded and opened into brackets the last sleuth case, so this is Case 802, the Case of Montecarlo, and this is stage 1, card sharks. And in this case, we are going to be visiting the casino in Console City, and we are going to be playing games of chance against statisticians who are part of a company called Rossling Polling in Console City. So let's run the sketch and let's see what it does. And you can see here that my sketch is printing out a poker table, and it's fanning out the entire deck of cards, all 52 of them. So let's have a look at the sketch and let's see how that's working and what we got to do. So you can see at the outset, you got a large array, and in this array there are 52 cards. It's a one-dimensional array and each card will have a property for its suit, in this case it's called type, and a number or a picture card. So these are strings. There's also going to be a property called marked in your array. And what we have to do in this case is we have to write a function and it's going to be called card picker. And we're going to use a for loop to set the marked property of the deck when we find a diamond, or where the value is ace. So we're going to be looking for those things in a function, and then we're going to have to call that function from within setup. So let's write our card picker function, and Sleuth is telling us exactly where to write that. So function cardPicker, now we don't need any arguments, but we do need our curly braces to start the body of the function. And we are going to then loop through the deck. I'm just going to check the name of that, I think it was deck, wasn't it? Yeah, so we're going to loop through deck. So for(var i = 0; i < deck.length; i ++ ). And then when we've done that, we can have an if statement to look for any card that meet those particular properties. So it was a type of diamonds, so if(deck[i], so that particular card that we're iterating on, .type is equal to, so double equal sign, Diamonds. Then we are going to want to set this marked property to true. So, deck[i].marked = true. All right, so that's half of our puzzle done. So if we run that, and then when the fanning gets through to the diamonds, which was the last suit, we should see that they'll be raised up slightly because they've been detected as being marked. Now, that hasn't actually happened. And the reason that hasn't happened is because we haven't called the cardPicker function. So we have to remember, whenever we write a function, when we want it to be run, we actually have to call it. No arguments, so we can just save and run that. So this time, hopefully, we should see those diamonds raising up. And yes sir, we've identified the diamonds. But the question also asked us to identify any cards that were aces. So we also want to put here or, because we want it to be diamonds or ones that are aces, deck[i].number, and your properties will have different names possibly when you come to do this. It is equal to ace, then we can also marked true, so let's save and run that. And you can see that the ace for each suit is being lifted and raised because we marked that property. Okay, so let's go back to Sleuth, and let's just try and mark this and see what score we get. So let's browse to the file, find data two and sketch, open it, and if we submit that, then yeah, we've got 100% on the case, and we can move on to the next stage. ## END TRANSCRIPT ## ## ADDITIONAL PAGE CONTENT ## Lesson 9.3 Code Philosophy Lesson 9.4 Game project 7: make it awesome Lesson 9.5 Continuing with Sleuth Video: Video Sleuth case by case 801 . Duration: 5 minutes 5 min Video: Video Sleuth case by case 802 . Duration: 5 minutes 5 min Reading: Reading Sleuth case 801 and 802: Visual Studio Code . Duration: 1 hour 1h Discussion Prompt: Discuss this topic's Sleuth cases . Duration: 20 minutes 20 min Reading: Reading Reflect on your learning . Duration: 10 minutes 10 min
# Week_2 - Summary

## Introduction to Sleuth
Video•
. Duration: 11 minutes
11 min

This transcript appears to be a guide for learning how to solve puzzles in the Sleuth game, specifically using Visual Studio Code as an Integrated Development Environment (IDE) and p5.js as a programming language.

The guide starts by walking through the first puzzle, where the player must identify Lina Lovelace by drawing a rectangle around her. The transcript explains the commands used in the code, such as `rect()` and `stroke()`, and provides examples of how to use these functions to draw shapes.

The second puzzle is more challenging, requiring the player to identify two different women in the image. The guide provides step-by-step instructions on how to solve this puzzle, including measuring the image and using the `stroke()` function to change the color of the rectangle.

Throughout the transcript, there are several mentions of the Sleuth game's scoring system and the importance of understanding the code philosophy behind the puzzles. The guide also touches on the idea that the player has four attempts remaining to solve each puzzle before they will be stopped from continuing by the chief.

The final section of the transcript provides information about upcoming lessons, including an introduction to Sleuth reading, a video tutorial on how to use Visual Studio Code with Sleuth, and a lab assignment where players will work through multiple puzzles in the Rookie stage of the game.

---

## Sleuth case 101
Video•
. Duration: 4 minutes
4 min

Here is a summary of the text in 15 sentences, preserving key information, formulae, and technical details:

The video transcript introduces Case 101, "Lina Lovelace," a crime-solving game using Sleuth, a visual programming language. The first stage is called Central Station, where players download and unzip a crime file to open it in the Finder. The project folder is then dragged into the left bar, and the sketch.js file is opened, providing instructions on how to solve the case. Lina Lovelace's location at the railway station is identified as a starting point for tracking her movements. A rectangle is drawn around Lina using the rect command within the draw function, with coordinates 18, 195 provided by crosshairs in the image viewer. The initial rectangle size is set to 100x100, but it needs to be adjusted to fit Lina's entire body. The correct size is determined to be 200 wide and 400 high, with some adjustments made for accuracy. The updated rectangle is then uploaded and submitted as part of the solution. After passing the first stage, players can proceed to the next case, Small Talk Speakeasy. Sleuth provides various tools and features, including visual programming, debugging, and live preview functionality. Players are encouraged to discuss their solutions in a discussion prompt and complete additional lessons on code philosophy and assessment guidelines. The video transcript includes links to related videos and labs for further learning. Overall, Case 101 introduces players to the basics of Sleuth and the concept of solving crimes using visual programming.

---

## Sleuth case 101: Visual Studio Code
Video•
. Duration: 6 minutes
6 min

Here is a summary of the text in 15 sentences, preserving all key information, formulae, and technical details:

The lecture is about solving Sleuth puzzles using Visual Studio Code. The first case is "Central Station" series 101, which can be solved by clicking on "Let's solve some crimes" and then "crime". A zip file will be downloaded containing the necessary files to solve the puzzle. The files include an image of a lady named Anna, an index.html file, a P5 JS library file, and a sketch.js file. The sketch.js file is the actual crime that needs to be solved. The goal is to draw a rectangle around Anna's body using the rect function. To do this, the initial coordinates (x, y) are set to 70, 45. The width and height of the rectangle can be adjusted by changing these values. A live server extension is used to run the code in the browser. The sketch.js file comes with a handy feature that displays the x and y coordinates as the mouse moves around it. To add code to the sketch.js file, the rect function is written with the initial coordinates and width/height parameters. The file is saved by pressing "Command S" on Mac or "Control S" on Windows. The solution can be uploaded back to the Sleuth application by clicking on "Browse", selecting the sketch.js file, and then clicking on "solution". This results in a 100% score. Using Visual Studio Code is recommended for future modules as it is a modern coding editor that will be used throughout the degree.

---

## Code philosophy: what it feels like to code
Video•
. Duration: 3 minutes
3 min

Here is a summary of the text in 15 sentences, preserving key information and technical details:

Coding can be an emotionally challenging experience, with coders often feeling frustrated due to the complexity and time-consuming nature of the work. This frustration is compounded by the misconception that coding is fast and easy, as depicted in movies and games industry portrayals. However, real-world examples demonstrate that coding can take years or even decades to complete, with projects like Grand Theft Auto requiring hundreds of people over three and a half years. Coders often put in long hours, including 18-hour days, to meet deadlines. Despite the challenges, coding is also highly addictive due to the sense of empowerment and autonomy it provides. Coders feel capable of solving problems and learning new skills, which fosters an optimistic outlook. This mindset enables coders to approach problems with a zen-like patience, viewing each challenge as an opportunity for growth. The concept of "flow" is particularly relevant to coding, where individuals experience intense focus, mastery, and intrinsic reward. Flow is characterized by feelings of timelessness, where the world recedes and all that matters is the task at hand. Coders often report experiencing endorphins or a sense of joy when solving problems or completing code successfully. Vikram Chandra's quote illustrates this phenomenon, describing the feeling of being in "a state of flow" where the world "fell away" and time "receded." The key takeaway is that coding can be challenging but also deeply rewarding, particularly when done in a state of flow. By embracing this mindset, coders can cultivate a positive relationship with their work and overcome frustration and obstacles. Code philosophy emphasizes the importance of understanding one's emotional state while coding and finding ways to optimize productivity and enjoyment. Ultimately, coding is an act of faith that requires patience, persistence, and a growth mindset.

---

## Sleuth: important information
Reading•
. Duration: 10 minutes
10 min

Here is a summary of the text in 15 sentences:

Sleuth is an educational activity designed to teach programming fundamentals. Students will work as private investigators, solving code crimes in various cases using their programming skills. The chief will provide guidance throughout the journey. Sleuth is a formative tool, meaning it won't directly affect grades but completing all puzzles is highly recommended. Completing the activity serves as a crucial learning experience for grasping basics of programming. Students can access Sleuth through two entry points: Rookie mode in Week 2 and Pro mode in Week 12.

Rookie mode is suitable for novice investigators, while Pro mode offers more advanced cases. Both modes are available at any time, but it's recommended to complete them as outlined in the course schedule. To solve puzzles, students can use either Brackets or Visual Studio Code, but Visual Studio Code is recommended due to its modern and robust features.

The instructor will introduce Sleuth in the next video, and students will embark on their adventure as private investigators. The main mission is to solve code crimes using programming skills, with guidance from the chief throughout the journey. Students can discuss one of the crime puzzles as part of their project submission for this module. Overall, Sleuth aims to provide a structured learning progression for grasping programming basics.

---

## Information about your assessments
Reading•
. Duration: 10 minutes
10 min

Here is a summary of the text in 15 sentences, preserving key information, formulae, and technical details:

The module will contain various summative and formative assessments. Summative assessments directly contribute to the final grade, while formative assessments provide low-stakes practice opportunities with feedback on progress. The course has two major assessments, each worth 50% of the grade: Coursework 1 and Coursework 2. Each coursework consists of a project, with Coursework 1 assessed halfway through the course (around Week 12) and Coursework 2 assessed at the end of the course (around Week 22). There are also several graded activities that have zero weighting, meaning they do not contribute to the final grade but are essential for learning.

These activities include Lesson 1.2 Introduction to Sleuth, Lesson 1.3 Code Philosophy, and Lesson 1.4 About your assessments, as well as Reading: Reading Information about your assessments and Reading: Reflect on your learning. The duration of these activities is approximately 10 minutes each. Additionally, there are two other reading activities: Reading: Reading Information about your assessments and Reading: Reflect on your learning.

The estimated time per week for each activity is not specified, but they are considered essential components of the module. The course aims to provide a detailed breakdown of all marks and assessment details. Students should mark as completed, dislike, or report an issue with any activities or assignments.

---

## Reflect on your learning
Reading•
. Duration: 10 minutes
10 min

Here is a summary of the text in 15 sentences, preserving key information, formulae, and technical details:

The instructor congratulates students on completing a portion of the course, which includes setting up a development toolkit, drawing with simple shapes and 2D coordinates using p5.js, and working through Sleuth cases. Students should reflect on their learning to identify areas for improvement and set concrete action plans to enhance their understanding. Evaluating learning is an essential skill that will contribute to success in any academic or professional endeavor. Reflecting on learning involves asking questions like "How comfortable am I with setting up and using the development environment?" or "How do I feel about my ability to use shapes and the coordinate system in p5.js?" Students should develop a plan to address areas of uncertainty, such as scheduling additional study sessions, seeking out resources, or posting on the discussion forum for clarification. The instructor recommends setting specific, measurable goals for improvement. Evaluation activities will be included at the end of each topic to regularly review progress and adjust strategies and goals based on ongoing self-assessment and new feedback. Learning is a continuous process, and it's okay to revise plans as needed. Students should aim to enhance their understanding of p5.js drawing functions, 2D coordinates, and Sleuth concepts. The instructor encourages students to seek out additional resources to reinforce their understanding of these concepts. By reflecting on learning and developing concrete action plans, students can improve their skills and knowledge. The course will continue with the introduction to Sleuth, code philosophy, and assessments. Students should be prepared to evaluate their progress regularly and adjust their strategies as needed. Overall, the instructor is committed to supporting students in achieving their goals and success in the course. By working together and seeking help when needed, students can overcome challenges and achieve their full potential.

---


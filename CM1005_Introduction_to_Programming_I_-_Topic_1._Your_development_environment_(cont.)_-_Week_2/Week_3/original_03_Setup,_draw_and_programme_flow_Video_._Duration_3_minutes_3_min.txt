# Setup, draw and programme flow
Videoâ€¢
. Duration: 3 minutes
3 min

URL: https://www.coursera.org/learn/uol-introduction-to-programming-1/lecture/G9VO3/setup-draw-and-programme-flow

## VIDEO TRANSCRIPT ## You may navigate through the transcript using tab. To save a note for a section of text press CTRL + S. To expand your selection you may use CTRL + arrow key. You may contract your selection using shift + CTRL + arrow key. For screen readers that are incompatible with using arrow keys for shortcuts, you can replace them with the H J K L keys. Some screen readers may require using CTRL in conjunction with the alt key Hi, in this video, we're going to be looking in a bit more detail at the parts of your program. We're also going to look at the program flow. So how your program is executed from beginning to end. So to start with, I've downloaded the sketch that you can find right beneath this video, and in it you'll see some basic code that you should already know be quite familiar with. We've got the great Canvas command in the setup function, and then we've got some drawing going on in the draw function. Now, will get exactly into what these functions are in a couple of weeks time. But for now, just know that these are two blocks of code that are going to be executed as part of your program. So if we click on the live preview, we should hopefully see two squares being drawn to the screen, in two different colors. Now, let's take a look at how these parts of the program are executed. As you might have guessed, the setup function is executed at the start of your program before the draw function is called. When setup is being completed, draw is then called repeatedly once every frame. You may know what I mean by frame, from film or animation which is just a series of still images and play together progressively over time to create the illusion of movement. Your browser does exactly the same thing. Every time draws code, is a new frame of the program. So as well as which order these functions are code in, we also need to know what order the lines are coding. Happily, this is quite easy, they just code from top to bottom as they will be lines of text in a book. This doesn't seem too complicated, but if you get it wrong you can have some unexpected behavior and things might not look the way you are expecting them to. So let me change this program around and you can see a little bit about what I mean. So if rather than these two squares overlapping one another, if they would directly laid over the top, and say the first one was a little smaller than the second one. Whereas if I switch these two squares around, turn back to the way they were originally, and neaten up my indenting, But now, we can see the two squares back as we expected them to be. One other trick you can try, thinking back to one of Simon's earlier videos, is that you can set an alpha channel on one of these color values, and that's going to make it slightly see-through. So if using this example again, we just add an alpha value of about a 100 to the blue square. This is going to make it about halfway to see through. So if we save this and look at the sketch behind, the blue square looks purple, because it's combination of half of the blue color with the red color shining through beneath that. ## END TRANSCRIPT ## ## ADDITIONAL PAGE CONTENT ## Lesson 2.1 Drawing functions Video: Video RGB (red, green and blue) colours . Duration: 8 minutes 8 min Practice Assignment: RGB colours . Duration: 3 minutes 3 min Video: Video Fill, stroke, noFill . Duration: 7 minutes 7 min Video: Video Setup, draw and programme flow . Duration: 3 minutes 3 min Practice Assignment: Setup, draw and programme flow . Duration: 30 minutes 30 min Video: Video Ellipse, rect, line, triangle and point . Duration: 5 minutes 5 min Practice Assignment: Ellipse, rect, line, triangle and point . Duration: 30 minutes 30 min Reading: Reading Programming exercise 3. Hack it: Robot parade . Duration: 30 minutes 30 min Discussion Prompt: Hack it: Robot parade . Duration: 20 minutes 20 min Reading: Reading Programming exercise 4. Code it from scratch: Kandinsky . Duration: 1 hour 1h Discussion Prompt: Kandinsky: your abstract master . Duration: 20 minutes 20 min Reading: Reading Teach it to yourself . Duration: 30 minutes 30 min Lesson 2.2: The console and debugging
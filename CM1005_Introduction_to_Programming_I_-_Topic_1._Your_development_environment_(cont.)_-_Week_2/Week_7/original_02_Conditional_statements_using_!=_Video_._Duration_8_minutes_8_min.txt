# Conditional statements using !=
Videoâ€¢
. Duration: 8 minutes
8 min

URL: https://www.coursera.org/learn/uol-introduction-to-programming-1/lecture/bwkwj/conditional-statements-using

## VIDEO TRANSCRIPT ## You may navigate through the transcript using tab. To save a note for a section of text press CTRL + S. To expand your selection you may use CTRL + arrow key. You may contract your selection using shift + CTRL + arrow key. For screen readers that are incompatible with using arrow keys for shortcuts, you can replace them with the H J K L keys. Some screen readers may require using CTRL in conjunction with the alt key Okay. So, in the previous video, we looked at the equals to operator and how to use that. In this video, we're going to look at the not equal to operator. This is what it looks like. It's an exclamation mark followed by the equals symbol. Now, when you're working with conditional statements, you'll notice that the exclamation mark is often used to signify the concept of not. So, this is how it looks in code. What you can see is that I've added a conditional statement to handle the situation when name doesn't equal Simon. So, in this case, it's going to print to the console, Hey your name isn't Simon. Okay. Let's actually have a look at the code. So, I've got the same code example that we used in the previous video here, but now we're going to add this extra conditional statement, so we can do this together. At the moment, you can see that name equals Simon and as we expect, we get this output that says, Hello Simon. Okay. So, I'm going to type the statements. So, it goes, if name, and now I put exclamation mark and the equals symbol to give me the not equals operator. If name doesn't equal Simon, what are we going to do? We're going to log to the console, Hey you're not Simon. Okay. So, let's look at the output of the program. At the moment, we get what we previously had. It says Hello Simon, and that's because the name currently equals Simon, but let's change the name to something else. Let's change it to Simone and see what happens. If we look back at our sketch, as we expect, we get Hey you're not Simon. Okay. So, that's a very basic example of how to use the not equals operator. But now let's look at something more complicated. Let's return to our bomb defuser game. Okay. So, the next thing I want to do is I actually want to make some of the mechanics of the game work. So, what I want in this game is that you have to press a hidden key and when you press that key, it defuses the bomb. So, what I'm going to do is I'm going to make a new variable and I'm going to call it secretKey. I'm going to pick a letter to initialize it to. So I'm going to initialize it to the key F. Okay, now the next part that happens is in our key pressed command. So, the first thing we're going to need to do is we're going to need to use that special built-in variable called key. So, let's just remind ourselves about that. I'm going to console log key and we can have a look at it. So, let's close this tab and run the sketch. We can already see a bit of the outputs of key here. I'm just going to press some different letters. So if I click here, there's G, there's H, J, K. You can see they all come out as capital letters. So, we're going to have to work with capitals. Okay. So, what I want to do is when we're playing the game, I want to check if secretKey is the same as key. So, I'm going to do a nested conditional statements. So inside my action, I'm going to do another check. I'm going to say if key is the same as secretKey, well, that means we've won. So, then I'm going to say newState equals three because that means we've won. But I also need to handle the situation, if key doesn't equal secretKey. Well, that means that we've lost. So, I'm going to say if key not equals secretKey, well, that means that newState now equals two. I'll press any key to start. Okay. Now, I'm going to press a key to defuse the bomb. So, in this case, I'm going to try actually pressing the secretKey which is F. Sure enough, I won the game. I'm going to try again. I'm going to press any key to start but this time I won't press the secretKey. I'll press a different key. So, I'm going to press G. Okay. So I lost the game and it says, Game over. Okay. So, I want to introduce another element to the game. I want to introduce a little bit of pressure for our player. So, I'm going to create a countdown timer. When time runs out, the bomb will blow up. So, I'm going to go back to my code and create a variable called countDown. I'm now going to go to the key pressed events. When the player starts the game, so that's when gameState switches from zero to one, I want to set countDown to a value, and I'm going to make it a quite high value. I'm going to make it 300 in this instance. Okay. Now, the next thing I want to do, is I want to make countDown go downwards as the game is being played. So, I'm going to go up into my draw loop. I can see that if gameState equals one is when the game is being played. So, this is a good place to do this. I can say countDown equals countDown minus one. So, that will make the countdown happen. Let's make sure we can actually see that timer as well. So, where we were drawing the text for when our game was happening, I'm now going to draw the countDown on the screen. So we'll put it at position 20. So we put it in the top left-hand corner of the screen, and I will put the variable there. So, let's try that out so far. Let's see what happens. I press any key to start, we do have an error there. So let's have a look. It happens on line 101. I used a capital T instead of a small T. Let's try that again. Press any key to start. Okay that's my countdown happening. But also you can see that the countdown just goes negative, rather than the bomb blowing up when we reach zero. So, that's the next thing I need to do. I need to go back to my code here, and I need to add another conditional statement, and it's another one of those nested statements. So, I can say if countDown equals equals zero, I'm going to change the gameState. I'm going to say, gameState now equals two because we ran out of time, you lost. Let's see if that now works. So, I'll press any key to start. There's the countdown going down. It reached zero, game over, we lost. So, there's some elements of the game working. It's still not a very good game. We're going to add some more to it in some later videos, but you might now want to try some of your own ideas to improve the game. Perhaps you want to randomize what the secretKey is or perhaps you want to introduce something like lives which will give you more attempts to defuse the bomb. Once you've done that, you might also want to start looking at the hacked exercise. There are already some things that you can do there as well. ## END TRANSCRIPT ## ## ADDITIONAL PAGE CONTENT ## Lesson 4.1 Conditional logic Video: Video Conditional statements using == . Duration: 14 minutes 14 min Video: Video Conditional statements using != . Duration: 8 minutes 8 min Practice Assignment: Conditional statements using == . Duration: 15 minutes 15 min Video: Video Conditional statements using Else and ElseIf . Duration: 12 minutes 12 min Practice Assignment: Conditional statements using Else and Else If . Duration: 15 minutes 15 min Video: Video && and II . Duration: 13 minutes 13 min Practice Assignment: && and II . Duration: 15 minutes 15 min Reading: Reading Programming exercise 9. Hack it: Bouncing robots . Duration: 30 minutes 30 min Discussion Prompt: Hack it: Bouncing robots . Duration: 20 minutes 20 min Lesson 4.2: Conditionals with types Lesson 4.3: Debugging techniques
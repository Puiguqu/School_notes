# Final exam key concepts review
Reading•
. Duration: 10 minutes
10 min

URL: https://www.coursera.org/learn/uol-discrete-mathematics/supplement/2isrl/final-exam-key-concepts-review

Set Theory: A crucial branch of mathematics, Set Theory allows us to work with groups of objects (elaborated as 'sets') in a general, formalised manner. Sets and Elements: A 'set' is a collection of unique objects termed as 'elements'. We say "Element x belongs to Set A", if x is an element of Set A. This is expressed symbolically as "x ∈ A". Subsets: If every element of Set B is also in Set A, then B is a 'Subset' of A, represented by B ⊆ A. Cardinality: The 'cardinality' of a set is the number of elements in the set, often denoted as |A| for a set A. Power Sets: A 'power set' of any set S, denoted P(S), is the set of all subsets of S. For example, if S = {a, b}, then P(S) = {{}, {a}, {b}, {a, b}}. Set Operations: Essential operations with sets include Union (A ∪ B, a set of elements in A, B or both), Intersection (A ∩ B, a set of elements common to both A and B), Difference (A - B, a set of elements in A but not in B), and Complement (if U is the universal set containing all elements under consideration, then the Complement of A, denoted as A', is the set of elements in U but not in A). Propositional Logic: Propositional Logic is the branch of logic that deals with arguments whose logical form can be fully characterised using propositional variables and logical connectives. Propositions: A 'proposition' is a declarative sentence that is either true (denoted by 'T') or false (denoted by 'F'), but not both. Truth Values: The 'truth value' of a proposition is 'true' (T) if it is a correct statement, and 'false' (F) otherwise. Logical Operations: Important logical operations include 'Negation' (¬p, which is true when p is false), 'Conjunction' (p ∧ q, which is true when both p and q are true), 'Disjunction' (p ∨ q, which is true when p, q or both are true), 'Implication' (p → q, which is false only when p is true and q is false) and 'Biconditional' (p ↔ q, which is true when p and q have the same truth value). Logical Equivalence: Two propositions p and q are said to be 'logically equivalent' if their truth tables are the same, that is, for every possible assignment of truth values to the individual propositional variables in p and q, the compound propositions p and q have the same truth value. Inference Rules: Modus Ponens: If P → Q and P are true, then Q is true. Modus Tollens: If P → Q and ¬Q are true, then ¬P is true. Disjunctive Syllogism: If P ∨ Q and ¬P are true, then Q is true. Hypothetical Syllogism: If P → Q and Q → R are true, then P → R is true. Predicate logic Predicate logic, also known as first-order logic (FOL), extends propositional logic by dealing with predicates, which are statements containing variables, and quantifiers that express the generality of statements. This form of logic allows for a more detailed analysis of the internal structure of propositions compared to Predicates: A predicate is a function that takes a variable (or variables) and returns a proposition. For example, the predicate P(x) might represent "x is a prime number." Here, x is a variable, and P(x) is a proposition that can be true or false depending on the value of x. Quantifiers: Universal Quantifier (∀): The universal quantifier ∀x∀x∀x means "for all x." A statement ∀x P(x) asserts that P(x) is true for every possible value of x. Existential Quantifier (∃): The existential quantifier ∃x means "there exists an x such that." A statement ∃xP(x) asserts that there is at least one value of x for which P(x) is true. Uniqueness Quantifier: The uniqueness quantifier, often denoted as ∃!x, expresses that there exists exactly one x such that a given predicate is true. This is a combination of existential quantification and a statement of uniqueness. Expression: ∃!xP(x) asserts that there is a unique x for which P(x) is true. Discourse Universe: In logic and mathematics, the 'universe of discourse', also known as the universal set, is the set of entities that we are interested in studying. These entities can be numbers, people, objects, etc. The universe of discourse is important because it clearly defines the scope of our study or discussion. Interpretation of Universal Discourse: The universe of discourse is the total set of all possible entities that can be used in a specific discussion, analysis, or calculation. It sets the scene, so to speak. For instance, if we are speaking of natural numbers, our universe of discourse (unless otherwise specified) will implicitly be the set of all natural numbers. Logical Connectives: Predicate logic uses the same logical connectives as propositional logic: negation (¬), conjunction (∧), disjunction (∨), implication (→), and biconditional (↔). Logical Inference: In predicate logic, logical inference involves deriving conclusions from premises using rules of inference. Common rules include: Universal Instantiation: From ∀x P(x), infer P(c) for any specific c in the domain. Existential Instantiation: From ∃x P(x)infer P(c) for some specific c in the domain. Universal Generalisation: From P(c) (true for an arbitrary c), infer ∀x P(x). Nested Quantifiers: Nested quantifiers occur when one quantifier appears within the scope of another. The meaning of a logical expression can change significantly depending on the order and type of these quantifiers. The statement: ∀x ∃y P(x,y) means For every x, there exists a y such that P(x,y) is true. This means that for each element in the domain of x, you can find at least one corresponding element in the domain of yfor which the predicate holds. Mathematical proofs and recursion Direct Proof is a straightforward method where you prove a statement by a direct chain of logical deductions. Proof by Contradiction is a method where you prove a statement is true by showing that assuming the statement is false leads to a contradiction. Proof by Contrapositive involves proving a statement of the form "If P, then Q" by instead proving "If not Q, then not P." Mathematical Induction is a method of proving statements, typically about integers. It consists of two main steps: Base Case: Show that the statement holds for the initial value (usually n=0 or n=1). Inductive Step: Assume that the statement holds for some arbitrary positive integer n=k (this is called the inductive hypothesis). Then, show that the statement also holds for n=k+1.If both steps are proven, the statement is true for all integers greater than or equal to the base case. Recursion is a method in computer science and mathematics where a function or a process calls itself directly or indirectly in order to solve a problem. Recursion is typically used to solve problems that can be broken down into smaller, more manageable sub-problems that are similar to the original problem. The key characteristics of recursion are: Base Case: Every recursive function must have at least one base case, which is a condition that stops the recursion. This prevents the function from calling itself indefinitely and ensures that the recursion eventually terminates. The second characteristic is the Recursive Case: The part of the function where the recursion occurs. The function calls itself with a modified argument that gradually leads to the base case. Functions and Relations: These concepts essentially offer methods to map or relate elements from one set to another. Functions: A 'function' from a set A to a set B is a rule of assignment that associates each element in A with exactly one element in B. The set A is called the domain of the function, and B is called the codomain. If each element in B is paired with at least one element in A, then the function is called 'surjective' or 'onto'. If no two different elements in A are associated with the same element in B, then the function is 'injective' or 'one-to-one'. If the function is both injective and surjective, it is 'bijective'. Inverse of a function: If f is a function from A to B, its inverse, denoted by f^-1, is a function from B back to A such that f^-1 (f(a)) = a for every a in A, and f(f^-1 (b)) = b for every b in B. Relations: A 'relation' from a set A to a set B is a set of ordered pairs where the first element comes from A and the second element comes from B. Specific types of relations are 'reflexive' (every element is related to itself), 'symmetric' (if an element a is related to element b, then b is related to a), 'antisymmetric' (if a is related to b and b to a, then a and b must be the same) and 'transitive' (if a is related to b, and b is related to c, then a is related to c). A relation R on elements of a set S is an equivalence relation if it is reflexive, symmetric and transitive. A relation R on elements of a set S is a partial order if it is reflexive, antisymmetric and transitive. A relation R on elements of set S is a total order if it is a partial order and every two elements of the set S are comparable with respect to the relation R Combinations and Permutations: Permutations and Combinations are the various ways in which objects from a set may be selected, generally without replacement, to form subsets. This selection of subsets is called a permutation when the order of selection is a factor, a combination when order is not a factor. Permutations: A permutation is an arrangement of r objects from a set of n distinct objects. The notation for permutations is often denoted as P(n,r) or sometimes nPr. The formula for finding the number of permutations is P(n,r) = n! / (n-r)! Combinations: A combination is a selection of items from a larger set, where the order of arrangement does not matter. It's generally denoted as C(n,r) or sometimes nCr. The formula for finding the combinations is C(n,r) = n! / [r!(n−r)!]. Graph Theory: In mathematics, a graph is a structure amounting to a set of objects, called vertices or nodes, connected by relations known as edges. These edges could have numeric values known as the 'edge weights'. Graphs can be used to represent numerous real-life applications, such as paths in a city, tasks in a project, etc. Euler Paths and Cycles: An Euler path is a path in a graph that passes through every edge exactly once. An Euler cycle (or circuit) is an Euler path which starts and ends on the same vertex. To determine if a graph has an Euler path or cycle, focus on the vertices' degree: an Euler cycle exists if all vertices have an even degree, and an Euler path exists if exactly two vertices have an odd degree (it starts at one and ends at the other). Hamiltonian Path: A Hamiltonian path is a path in a graph that visits each vertex exactly once. Determining whether such a path exists in a given graph is known as the Hamiltonian path problem, which is NP-complete. Boolean Algebra: Boolean Algebra is a division of mathematics that deals with operations on logical values and incorporates binary variables with two levels of values such as true/false, on/off, or 0/1. The fundamental operations of Boolean Algebra are conjunction (and), denoted as ∧, disjunction (or), denoted as ∨, and complement (not), denoted as ¬. Boolean Expressions: Expressions in Boolean algebra consist of binary variables, constants 0 and 1, and logical operations. Boolean expressions represent logical relations between variables. Simplification of Boolean Expressions: Boolean expressions can be simplified by applying the laws of Boolean algebra, which include laws such as the law of idempotence (A.A = A, A+A = A), the law of nullity (A+1 = 1, A.0 = 0), etc. Logical Gates: Logical gates are the basic building blocks of any digital system. They are primarily classified into three types: AND gate (∧), OR gate (∨), and NOT gate (¬). Use of Boolean algebra laws of or Karnaugh map to simplify a Boolean expression. Algorithms: An algorithm is a step-by-step procedure to perform some computation. In Discrete Mathematics, we primarily study algorithms related to graphs, trees, and other data structures. Dijkstra's Algorithm: Dijkstra's Algorithm is one such algorithm used to find the shortest path from one node (or point) in a graph to another. The algorithm maintains a set of unvisited nodes and calculates a tentative distance from the starting node to the other nodes. The node with the shortest tentative distance is selected first. The tentative distances to all its neighbouring unvisited nodes are calculated and updated if they are smaller than the existing values. The process is repeated until all nodes in the graph have been visited. Reading: Reading Revision . Duration: 10 minutes 10 min Reading: Reading Practice Exam . Duration: 2 hours 2h Reading: Reading Practice Exam Solution . Duration: 10 minutes 10 min Reading: Reading Final exam key concepts review . Duration: 10 minutes 10 min Reading: Reading Final exam study guide . Duration: 10 minutes 10 min Practice Assignment: Practice Final Exam . Duration: 1 hour 30 minutes 1h 30m Final exam key concepts review Set Theory: A crucial branch of mathematics, Set Theory allows us to work with groups of objects (elaborated as 'sets') in a general, formalised manner. Sets and Elements: A 'set' is a collection of unique objects termed as 'elements'. We say "Element x belongs to Set A", if x is an element of Set A. This is expressed symbolically as "x ∈ A". Subsets: If every element of Set B is also in Set A, then B is a 'Subset' of A, represented by B ⊆ A. Cardinality: The 'cardinality' of a set is the number of elements in the set, often denoted as |A| for a set A. Power Sets: A 'power set' of any set S, denoted P(S), is the set of all subsets of S. For example, if S = {a, b}, then P(S) = {{}, {a}, {b}, {a, b}}. Set Operations: Essential operations with sets include Union (A ∪ B, a set of elements in A, B or both), Intersection (A ∩ B, a set of elements common to both A and B), Difference (A - B, a set of elements in A but not in B), and Complement (if U is the universal set containing all elements under consideration, then the Complement of A, denoted as A', is the set of elements in U but not in A). Propositional Logic: Propositional Logic is the branch of logic that deals with arguments whose logical form can be fully characterised using propositional variables and logical connectives. Propositions: A 'proposition' is a declarative sentence that is either true (denoted by 'T') or false (denoted by 'F'), but not both. Truth Values: The 'truth value' of a proposition is 'true' (T) if it is a correct statement, and 'false' (F) otherwise. Logical Operations: Important logical operations include 'Negation' (¬p, which is true when p is false), 'Conjunction' (p ∧ q, which is true when both p and q are true), 'Disjunction' (p ∨ q, which is true when p, q or both are true), 'Implication' (p → q, which is false only when p is true and q is false) and 'Biconditional' (p ↔ q, which is true when p and q have the same truth value). Logical Equivalence: Two propositions p and q are said to be 'logically equivalent' if their truth tables are the same, that is, for every possible assignment of truth values to the individual propositional variables in p and q, the compound propositions p and q have the same truth value. Inference Rules: Modus Ponens: If P → Q and P are true, then Q is true. Modus Tollens: If P → Q and ¬Q are true, then ¬P is true. Disjunctive Syllogism: If P ∨ Q and ¬P are true, then Q is true. Hypothetical Syllogism: If P → Q and Q → R are true, then P → R is true. Predicate logic Predicate logic, also known as first-order logic (FOL), extends propositional logic by dealing with predicates, which are statements containing variables, and quantifiers that express the generality of statements. This form of logic allows for a more detailed analysis of the internal structure of propositions compared to Predicates: A predicate is a function that takes a variable (or variables) and returns a proposition. For example, the predicate P(x) might represent "x is a prime number." Here, x is a variable, and P(x) is a proposition that can be true or false depending on the value of x. Quantifiers: Universal Quantifier (∀): The universal quantifier ∀x∀x∀x means "for all x." A statement ∀x P(x) asserts that P(x) is true for every possible value of x. Existential Quantifier (∃): The existential quantifier ∃x means "there exists an x such that." A statement ∃xP(x) asserts that there is at least one value of x for which P(x) is true. Uniqueness Quantifier: The uniqueness quantifier, often denoted as ∃!x, expresses that there exists exactly one x such that a given predicate is true. This is a combination of existential quantification and a statement of uniqueness. Expression: ∃!xP(x) asserts that there is a unique x for which P(x) is true. Discourse Universe: In logic and mathematics, the 'universe of discourse', also known as the universal set, is the set of entities that we are interested in studying. These entities can be numbers, people, objects, etc. The universe of discourse is important because it clearly defines the scope of our study or discussion. Interpretation of Universal Discourse: The universe of discourse is the total set of all possible entities that can be used in a specific discussion, analysis, or calculation. It sets the scene, so to speak. For instance, if we are speaking of natural numbers, our universe of discourse (unless otherwise specified) will implicitly be the set of all natural numbers. Logical Connectives: Predicate logic uses the same logical connectives as propositional logic: negation (¬), conjunction (∧), disjunction (∨), implication (→), and biconditional (↔). Logical Inference: In predicate logic, logical inference involves deriving conclusions from premises using rules of inference. Common rules include: Universal Instantiation: From ∀x P(x), infer P(c) for any specific c in the domain. Existential Instantiation: From ∃x P(x)infer P(c) for some specific c in the domain. Universal Generalisation: From P(c) (true for an arbitrary c), infer ∀x P(x). Nested Quantifiers: Nested quantifiers occur when one quantifier appears within the scope of another. The meaning of a logical expression can change significantly depending on the order and type of these quantifiers. The statement: ∀x ∃y P(x,y) means For every x, there exists a y such that P(x,y) is true. This means that for each element in the domain of x, you can find at least one corresponding element in the domain of yfor which the predicate holds. Mathematical proofs and recursion Direct Proof is a straightforward method where you prove a statement by a direct chain of logical deductions. Proof by Contradiction is a method where you prove a statement is true by showing that assuming the statement is false leads to a contradiction. Proof by Contrapositive involves proving a statement of the form "If P, then Q" by instead proving "If not Q, then not P." Mathematical Induction is a method of proving statements, typically about integers. It consists of two main steps: Base Case: Show that the statement holds for the initial value (usually n=0 or n=1). Inductive Step: Assume that the statement holds for some arbitrary positive integer n=k (this is called the inductive hypothesis). Then, show that the statement also holds for n=k+1.If both steps are proven, the statement is true for all integers greater than or equal to the base case. Recursion is a method in computer science and mathematics where a function or a process calls itself directly or indirectly in order to solve a problem. Recursion is typically used to solve problems that can be broken down into smaller, more manageable sub-problems that are similar to the original problem. The key characteristics of recursion are: Base Case: Every recursive function must have at least one base case, which is a condition that stops the recursion. This prevents the function from calling itself indefinitely and ensures that the recursion eventually terminates. The second characteristic is the Recursive Case: The part of the function where the recursion occurs. The function calls itself with a modified argument that gradually leads to the base case. Functions and Relations: These concepts essentially offer methods to map or relate elements from one set to another. Functions: A 'function' from a set A to a set B is a rule of assignment that associates each element in A with exactly one element in B. The set A is called the domain of the function, and B is called the codomain. If each element in B is paired with at least one element in A, then the function is called 'surjective' or 'onto'. If no two different elements in A are associated with the same element in B, then the function is 'injective' or 'one-to-one'. If the function is both injective and surjective, it is 'bijective'. Inverse of a function: If f is a function from A to B, its inverse, denoted by f^-1, is a function from B back to A such that f^-1 (f(a)) = a for every a in A, and f(f^-1 (b)) = b for every b in B. Relations: A 'relation' from a set A to a set B is a set of ordered pairs where the first element comes from A and the second element comes from B. Specific types of relations are 'reflexive' (every element is related to itself), 'symmetric' (if an element a is related to element b, then b is related to a), 'antisymmetric' (if a is related to b and b to a, then a and b must be the same) and 'transitive' (if a is related to b, and b is related to c, then a is related to c). A relation R on elements of a set S is an equivalence relation if it is reflexive, symmetric and transitive. A relation R on elements of a set S is a partial order if it is reflexive, antisymmetric and transitive. A relation R on elements of set S is a total order if it is a partial order and every two elements of the set S are comparable with respect to the relation R Combinations and Permutations: Permutations and Combinations are the various ways in which objects from a set may be selected, generally without replacement, to form subsets. This selection of subsets is called a permutation when the order of selection is a factor, a combination when order is not a factor. Permutations: A permutation is an arrangement of r objects from a set of n distinct objects. The notation for permutations is often denoted as P(n,r) or sometimes nPr. The formula for finding the number of permutations is P(n,r) = n! / (n-r)! Combinations: A combination is a selection of items from a larger set, where the order of arrangement does not matter. It's generally denoted as C(n,r) or sometimes nCr. The formula for finding the combinations is C(n,r) = n! / [r!(n−r)!]. Graph Theory: In mathematics, a graph is a structure amounting to a set of objects, called vertices or nodes, connected by relations known as edges. These edges could have numeric values known as the 'edge weights'. Graphs can be used to represent numerous real-life applications, such as paths in a city, tasks in a project, etc. Euler Paths and Cycles: An Euler path is a path in a graph that passes through every edge exactly once. An Euler cycle (or circuit) is an Euler path which starts and ends on the same vertex. To determine if a graph has an Euler path or cycle, focus on the vertices' degree: an Euler cycle exists if all vertices have an even degree, and an Euler path exists if exactly two vertices have an odd degree (it starts at one and ends at the other). Hamiltonian Path: A Hamiltonian path is a path in a graph that visits each vertex exactly once. Determining whether such a path exists in a given graph is known as the Hamiltonian path problem, which is NP-complete. Boolean Algebra: Boolean Algebra is a division of mathematics that deals with operations on logical values and incorporates binary variables with two levels of values such as true/false, on/off, or 0/1. The fundamental operations of Boolean Algebra are conjunction (and), denoted as ∧, disjunction (or), denoted as ∨, and complement (not), denoted as ¬. Boolean Expressions: Expressions in Boolean algebra consist of binary variables, constants 0 and 1, and logical operations. Boolean expressions represent logical relations between variables. Simplification of Boolean Expressions: Boolean expressions can be simplified by applying the laws of Boolean algebra, which include laws such as the law of idempotence (A.A = A, A+A = A), the law of nullity (A+1 = 1, A.0 = 0), etc. Logical Gates: Logical gates are the basic building blocks of any digital system. They are primarily classified into three types: AND gate (∧), OR gate (∨), and NOT gate (¬). Use of Boolean algebra laws of or Karnaugh map to simplify a Boolean expression. Algorithms: An algorithm is a step-by-step procedure to perform some computation. In Discrete Mathematics, we primarily study algorithms related to graphs, trees, and other data structures. Dijkstra's Algorithm: Dijkstra's Algorithm is one such algorithm used to find the shortest path from one node (or point) in a graph to another. The algorithm maintains a set of unvisited nodes and calculates a tentative distance from the starting node to the other nodes. The node with the shortest tentative distance is selected first. The tentative distances to all its neighbouring unvisited nodes are calculated and updated if they are smaller than the existing values. The process is repeated until all nodes in the graph have been visited. Mark as completed Dislike Report an issue
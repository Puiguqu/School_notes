# Notional machines
Video•
. Duration: 4 minutes
4 min

URL: https://www.coursera.org/learn/uol-how-computers-work/lecture/EP09i/notional-machines

## VIDEO TRANSCRIPT ## You may navigate through the transcript using tab. To save a note for a section of text press CTRL + S. To expand your selection you may use CTRL + arrow key. You may contract your selection using shift + CTRL + arrow key. For screen readers that are incompatible with using arrow keys for shortcuts, you can replace them with the H J K L keys. Some screen readers may require using CTRL in conjunction with the alt key We've talked about how abstraction is a really powerful concept in computer science, because it allows us to take really complicated things that are happening and represent them in a simplified way that's easier to understand. But so far we've talked about abstraction in terms of representation, we've talked about abstraction in art as a way of representing the world in a picture, and we've talked about how we can think of different ways of representing video on a computer in terms of different layers of abstraction. But computers aren't just for representing stuff. Computers do things. That's the real power of a computer, you can do things with a video. You don't just want store video, you want to play it. Just as computers can store billions of numbers, they can do billions of calculations. So, what's going on in a piece of software is immensely complex, and we need an abstraction to be able to think about that. It's no longer a representational abstraction is an abstraction of the actions of a computer, something we call a notional machine. So, we can imagine taking this computer, this immensely complicated machine, and think of it as a much simpler machine that does simple things. I'm going to talk about that in terms of a video player, and the kind of video you're playing right now. Since all of you are watching a video right now, I imagined that you've all got some kind of abstract notional machine in your head of how a video player works, even if you've never thought about it before. A video player is a very complicated piece of software, it involves transmitting and receiving lots of data of the internet, it has to decode, compressed video, process that video, and send it to the graphics card to display on screen. But we don't have to think about all that stuff, if we just want to use a video player. What we're going to be able to do is think of it as an abstraction. Earlier, we saw that we can think of a video as an abstraction, which is just a sequence of pictures. We can use that abstraction to think about how a video player works. So, the video itself is a stream of pictures and we can lay those pictures out along a timeline like this. We also have something called a playhead, which identifies the position we're at currently in the video. So, we're somewhere along that timeline, and because we are at a certain position we're showing a certain image in the video. We can move to a new position and show a different image. We can use that simple abstraction to build a slightly more complex obstruction, like playing when we hit "Play". All we're doing is just automatically moving forward after every image or frame, and then at the end we can pause and stop. So, a timeline, a playhead, and playing by moving forward along the timeline is a notional machine of a video player. I hope it's something that sounds familiar to you from having used a video like the one you're watching now. This notional machine is something that you can use to easily control the video player. If you didn't catch what I just said, you can just click on your timeline go back and watch it again. That should all make sense to you, because you know that your position on the line corresponds to a time in the video. So, we have a notional machine a simplified version of how our video player works, which ignores all the way a complexity of what's going on in the software but captures the very essence of what a video player is doing. This enables you to use it effectively. In the rest of this course, we'll see and create notional machines of many different types of software which will help us understand and use them better. You'll also learn some building blocks, that we can apply to all sorts of different software to create those notional machines. ## END TRANSCRIPT ## ## ADDITIONAL PAGE CONTENT ## Lesson 1.0 Introduction Lesson 1.1 Abstraction Video: Video Abstraction . Duration: 4 minutes 4 min Video: Video Abstraction in data representations . Duration: 4 minutes 4 min Reading: Reading Abstraction and abstraction in data representations – lecture summary . Duration: 10 minutes 10 min Practice Assignment: Practice quiz – Abstraction Submitted Video: Video Notional machines . Duration: 4 minutes 4 min Reading: Reading Notional machines – lecture summary . Duration: 10 minutes 10 min Practice Assignment: Practice quiz - Notional machines Submitted Video: Video CPU and memory . Duration: 3 minutes 3 min Discussion Prompt: Notional machines . Duration: 30 minutes 30 min
# Case study debrief
Video•
. Duration: 3 minutes
3 min

URL: https://www.coursera.org/learn/uol-how-computers-work/lecture/BmNpI/case-study-debrief

## VIDEO TRANSCRIPT ## You may navigate through the transcript using tab. To save a note for a section of text press CTRL + S. To expand your selection you may use CTRL + arrow key. You may contract your selection using shift + CTRL + arrow key. For screen readers that are incompatible with using arrow keys for shortcuts, you can replace them with the H J K L keys. Some screen readers may require using CTRL in conjunction with the alt key Any application you're describing will have to make use of the memory manager. It will have been allocated some memory to start with and may have to request more memory if it loads a lot of data. Your applications are also very likely to access the file system. How do they use it? Will they have made a lot of use of device drivers? They will definitely need dual screen using the graphics drivers, and will almost certainly use the keyboard and mouse drivers or touchscreen drivers if you're on a phone. What about other device drivers? Since we're talking about using two applications at the same time, you need to talk about processes as well. How will the operating system switch between the two applications? Will it have to interrupt them often? Do they use the same shared resources? For example, do they need access to the same file? The different designs of applications will change how they interact with the operating system. Let's imagine that you're watching a video lecture and taking notes with a note-taking app. Some applications will need a lot of data all at the same time and so they need to have large memory areas. For example, maybe they're loading large files. The video player is likely to use a lot of memory to store the video. Other applications use less data. The note-taking app will only need to store a few text characters which only take up a small number of kilobytes. This raises the question of how much data is loaded in memory and how much is stored in disk? A video player will keep most of the video data on disk and only load data into memory when it's needed. Most applications like the note-taking app just lay whole files into memory at a time. But these applications will need to access the graphics drivers. The note-taking app will make much more use of the keyboard driver than the video player will. On the other hand, the video player might need access to the network drivers if it's streaming from the internet. The two apps will use processes in very different ways. The video player is playing constantly, which means it's constantly doing things. If the video is uncompressed, it might need to adjust use direct memory access to send data to the graphics card. But it's more likely to be compressed, in which case, the CPU will be busy with compression algorithms. That means it will need to be running a lot and will need to be interrupted for any other applications to be able to do anything. On the other hand, the note-taking app doesn't need to do much for most of the time. It spends its time waiting for you to type something. That means it only does anything when it gets an interrupt from the keyboard. These two applications don't share any resources, but that doesn't mean there's no sharing going on. So far, we've assumed that there's only one process for each application. But the note-taking app might have more than one. Many note-taking apps sync to the cloud, which means they send the notes you've made to a server somewhere. This is often done in a separate process from the node editing app. So, the editor and the sync process have to share the notes file. Whenever you're loading or saving the file from the editor, it will be locked and the sync process will not be able to access it. When the editor unlocks it, the sync process is again free to send data to the cloud. So, we can see how the designs of different applications can have a big effect on how they use the operating system and therefore their performance. How did the applications that are described compared to the ones that you looked at? Were they similar or different? Did they use the operating system in the same ways? Maybe the application seemed very different on the surface but their use of the operating system was very similar. I hope you've considered a lot of the points are discussed in this video and that you found this exercise useful. ## END TRANSCRIPT ## ## ADDITIONAL PAGE CONTENT ## Lesson 12.1 Inter-process Communication Lesson 12.2 Summary Peer-graded Assignment: Applications and operating systems . Duration: 3 hours 3h Review Your Peers: Applications and operating systems Video: Video Case study debrief . Duration: 3 minutes 3 min Discussion Prompt: What have you learned? . Duration: 30 minutes 30 min Graded Assignment: Practice quiz – Topic 6 . Duration: 30 minutes 30 min Video: Video Summary . Duration: 1 minute 1 min
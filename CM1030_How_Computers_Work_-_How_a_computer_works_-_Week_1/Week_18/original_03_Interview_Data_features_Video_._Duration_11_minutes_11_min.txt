# Interview: Data features
Videoâ€¢
. Duration: 11 minutes
11 min

URL: https://www.coursera.org/learn/uol-how-computers-work/lecture/EqrAo/interview-data-features

## VIDEO TRANSCRIPT ## You may navigate through the transcript using tab. To save a note for a section of text press CTRL + S. To expand your selection you may use CTRL + arrow key. You may contract your selection using shift + CTRL + arrow key. For screen readers that are incompatible with using arrow keys for shortcuts, you can replace them with the H J K L keys. Some screen readers may require using CTRL in conjunction with the alt key So we've been learning about how important it is to look at the representation of our data in machine learning, and what features to use as part of machine learning. In this course, you've mostly been looking at images and pixels, but there's really many many different types of data that require many different types of features. So I'd like to talk to a panel of experts about the features they use. So starting with you Jamie, what kind of data and features do you use in your projects? Pretty much all of my projects are time series. So that's where you've got your data, it's not just that it's a pixel in a particular location with a certain color, it's a changing variable over time. So capturing that temporal information is quite a challenge, and to build a feature on that is a challenge too. One of the things you might want to look for a temporal data, so you can imagine for example, the signals your heart makes. When you see an Electrocardiogram, there's this distinctive electrical signal, that's a time series. One way to an analyze that would be to have a fixed window of time, say like a few seconds or a second, and you slide it over the data, and you create some analysis on that. One of my favorite features as well, I said favorite features, useful for features that I find is we want to know something about how fast the signal is moving, are they moving up and down a lot or they just staying fairly flat? One of the things you can do is you can just take the mean of this window and say, "okay, what's the average level here?" Or if there's a lot of movement, we could do something like standard deviation to find out how much it's moving up and down. We can go even further and figure out what the frequency response is. So what specific frequencies, how fast are those signals moving, and a really cheap and easy way to do that, which is my favorite feature, is where we do a zero crossing count. So if you've got a signal in time, every time it crosses the zero line, so the middle line, every time it crosses that, we count, we just add up, and that allows us to approximate frequency using a very simple Algorithm. Yeah. Time series is really rich and powerful form of data that you can see everywhere, whether it's in sound data, or the candidate you're talking about, or I work a lot with human movement, which is very time-series based or financial data as well. The stock market data is all about time. So that's not only what we talked about in the course, but it's a really important part of Machine Learning. Yes. Many of the same algorithms can be used. So they're transferable, once you start getting your head around. We're also taking this variable of time into account, but yes, it's a very interesting, a very useful topic. What about you Larisa, what kind of data do you work with? In drug design, you work mostly these chemical structures, but then we had found very interesting projects. It's about Mapper learning. There is a famous theory in Machine Learning, No free lunch theorem. So there is no single machine learning algorithms that will work in all circumstances, and it's very true for drug designs. So we analyze the different studies against different drug targets, using different machine learning algorithms, but those are using different representations. Because you can represent chemical structures by many different ways, and we learned. So it's learning about learning, mapper learning, we try to learn, what representations, for one drug targets, using both Machine Learning are working best? It was very interesting. So for some situations, you have quite the short data set. So this will be your features description of these data sets. How many data points, if they're sufficiently independent, if there is noise, but also a description of Machine Learning algorithm itself. Are they robust against noise? Do they have parameters? Also a description on drug targets. So we put it all together as features. So we have combined datasets, data itself, machine learning algorithms, and also drug targets. By the way, one of the best performance was around the forest. Yes, if you don't know what to apply, what characteristics, it is a good starting point. Okay. I mean that's a lot of really interesting stuff there. I think it's a really important point that often you can get some data and you can have very different representations of it. That's something that comes up a lot in machine learning, isn't it? Choosing which representation to use is really really important. But also, that sounds like a really amazing project to not only use machine learning, but applying machine learning to Machine Learning itself, which can give some really interesting results. The fact that you're never going to find the perfect algorithm. But then maybe something like Random forest which we haven't talked about, it's quite an interesting algorithm. But one that works generally quite well in at least the kind of problems you've been working on. As you said, there's no free lunch, there's no one single algorithm that's guaranteed to work everywhere. I think the students who are working on machine learning projects just should remember, they will never find the perfect solution. So you just need to find something that works. Rebecca. Yeah. A lot of the projects that I work on, and that I help students to work on, use a wide variety of sensors, audio or video. I think echoing some of the things that Jamie and Larisa both said, there's not a perfect feature representations for any given sensor, or even necessarily for any given task, and there's a lot of experimentation that happens in trying to figure out what are good features for a task. I can come back to my Leap Motion example that I mentioned earlier. So this device itself will find a skeleton of your hand in space and you can pretty easily get information about the XYZ of each fingertip for instance. So I just did a project with a bunch of music therapists and music teachers who were using leap to build musical instruments for people with disabilities. So they were using classification and regression as people move their hand in space to select which sounds sample is played, or to change sound in a continuous way over time. We ended up with a couple of different feature representations. One of them just uses information, not so much about your hand position, but just where's your palm in space, and that gives you an instrument that you can think about playing by selecting different sounds in different places. Another feature extractor we built uses the distance between these two fingers. So you can imagine squeezing a sound, and the squeezing motion changes what sound you're making. But certainly, in other projects, people have gotten really good use out of more complex features, including treating this data as a time-series data. So one of my favorite students projects from the Workshop is a little Robot called Hi-Bot and you control Hi-Bot by waving at it. When it sees you waving, it takes its little cardboard arm and waves back at you. In order to understand whether somebody's waving or not, you can't just look at what position your hand or fingers are in at the moment, you have to look at how they're moving over time or even are they moving over time. So in that case, we can take a time window and look at the finger positions or the palm position over the last few milliseconds, and then look at, what is the difference between them? Maybe maximum left and maximum right position, or what is the standard deviation within that window, it turns out that's great for noticing whether somebody's waving or not. was listening to a podcast about an AR experience, augmented reality experience, where you interacted with waving, and the developer says, you just wouldn't believe how many different ways people wave. They wave like this, they wave like this, they wave like this. I think that shows for them the importance of gathering a lot of data, and be able to test, and the data isn't always what do you expect it to be. For sure. Again, as Jamie mentioned earlier when he was talking about some of his projects, waving is something that we tend to do without thinking about it. We can't always articulate how we wave, or even remember whether we're waving in the same way someone else or not. So using machine learning to capture a wave from data is just so much more of a sane way to build a project than trying to get a programmer, and somebody who has a PhD in waving, or something like that. I might lead back quickly to Jamie because we've got this idea of the No free lunch and that there isn't a perfect feature representation. Is that something that comes up a lot with you, that you need lots of different feature representations for different tasks? Absolutely. It's totally what you're saying. There's are many different ways to wave for example, and so many ways to do everything. You couldn't have one algorithm that solves it all. Part of the problem with that is as I looking at it as an Engineer saying, oh yes, this is what the problem is. That feature seems appropriate, and it makes perfect sense for a very small number of situations. What you're doing is you're over fitting the problem. So we need to try and look at it broader and think of things that we've not thought of. So Machine Learning is pretty good at that. We throw it lots of data, lots of random, noisy examples, and that make a better system than we're able to do by ourselves. So the variety of features that you might use, the choice of features, maybe something that we could get the algorithm to do, rather than me deciding or using mean and variance. The features can be selected themselves using Machine Learning, which is a big area of work. Yeah. Which is a lot of what the deep learning is doing. Pretty much, yes. Okay. Well, great. Thank you everybody. That's a great explanation of of the power features, and importance of features, and the diversity of features in Machine Learning. If our learners go further and Machine Learning, this is definitely a topic that will be vital in the practice of Machine Learning. ## END TRANSCRIPT ## ## ADDITIONAL PAGE CONTENT ## Lesson 18.1 Data features Discussion Prompt: Data features . Duration: 10 minutes 10 min Video: Video Data features . Duration: 3 minutes 3 min Practice Assignment: Practice quiz â€“ Bag of words . Duration: 30 minutes 30 min Video: Video Neural networks . Duration: 6 minutes 6 min Video: Video Interview: Data features . Duration: 11 minutes 11 min Reading: Reading Artificial neural networks . Duration: 55 minutes 55 min Lesson 18.2 Summary
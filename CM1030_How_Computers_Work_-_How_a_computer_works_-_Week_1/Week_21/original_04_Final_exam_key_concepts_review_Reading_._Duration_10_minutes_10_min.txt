# Final exam key concepts review
Readingâ€¢
. Duration: 10 minutes
10 min

URL: https://www.coursera.org/learn/uol-how-computers-work/supplement/eWltl/final-exam-key-concepts-review

The final exam consists of multiple parts with short and longer questions for the computer science concepts introduced in this course. For the questions requiring discussion, explaining and evaluation, ensure to ask yourself some of the following questions: Does the answer describe an appropriate range of computer science concepts from this course? Does the answer illustrate the concepts with a suitable example? Does the answer explain how the computer system or data format works? Does the answer predict how different technical choices or situations affect the system? The following resource provides a review of the key concepts, skills and knowledge you will need to successfully pass the final exam. 1. Data representation and transmission Bit patterns: What it is: The way data is represented in computers using binary digits (0s and 1s). Example: The letter 'A' is represented as 01000001 in ASCII. Why it matters: Essential for understanding how data is stored and processed in computers. Compression techniques: Lossy compression: What it is: Reduces file size by removing some data, often leading to a loss of quality. Example: JPEG images where fine details are lost to reduce file size. When to use it: Suitable for multimedia files where perfect accuracy is not required. Lossless compression: What it is: Reduces file size without losing any data. Example: PNG images and ZIP files. When to use it: Important when you need to retain all original data. Memory types: Registers: What it is: Small, fast storage locations within the CPU. Role: Temporarily holds data that the CPU is currently working on. Random access memory (RAM): What it is: Volatile memory used as the main memory for temporary data storage. Role: Stores data and instructions that the CPU needs while performing tasks. Hard disks: What it is: Non-volatile storage devices used for long-term data storage. Role: Store operating systems, software applications, and user data. Machine instructions: What they are: Basic commands that tell the CPU to perform specific tasks. Examples: LOAD: Reads data from memory. STORE: Writes data to memory. ADD: Performs arithmetic operations. JUMP: Alters the flow of execution. 2. Computer architecture and hardware CPU Components: Arithmetic logic unit (ALU): Role: Performs arithmetic and logical operations. Example: Adding two numbers or comparing values. Control unit: Role: Directs the operation of the processor by coordinating how data moves through the CPU. Example: Fetching instructions from memory, decoding them, and executing them. Registers: Role: Small, fast storage locations within the CPU. Example: Holding intermediate results of computations. Memory hierarchy: Registers: Closest to the CPU, very fast but small in size. Cache: Small, fast memory located near the CPU, used to store frequently accessed data. RAM: Larger and slower than cache, used for temporary storage of data and instructions. Hard disks: Much larger and slower, used for long-term storage. File formats: Uncompressed: Example: BMP images. When to use it: Stores data without any compression, resulting in large file sizes. Lossless compressed: Example: PNG images, ZIP files. When to use it: Compresses data without losing any information, suitable for text and images where quality is important. Lossy compressed: Example: JPEG images, MP3 audio files. When to use it: Compresses data by removing some information, suitable for multimedia where some loss of quality is acceptable. 3. Networking and communication IP Addresses: What it is: Unique numerical labels assigned to devices on a network. Role: Identifies devices to facilitate communication over a network. Example: 192.168.1.1 Network protocols: Application layer: Role: Interfaces with the end user. Example: HTTP, FTP. Transport layer: Role: Ensures complete data transfer. Example: TCP, UDP. Network layer: Role: Routes data packets. Example: IP. Link layer: Role: Handles physical data transfer. Example: Ethernet. Network types: Personal area network (PAN): What it is: Small networks for personal devices. Example: Bluetooth. Local area network (LAN): What it is: Networks covering limited areas like offices. Example: Ethernet, Wi-Fi. Wide area network (WAN): What it is: Networks covering large geographical areas. Example: The internet. Web server components: Databases: Role: Store and manage data for web applications. Example: SQL databases like MySQL. Web servers: Role: Serve web pages to clients. Example: Apache, Nginx. 4. Machine learning and algorithms Machine learning classification: What it is: A type of machine learning that categorises data into predefined classes. Example: Email spam detection. Machine learning project steps: Data collection: Role: Gathering relevant data for training the model. Example: Collecting images for an image recognition project. Feature extraction: Role: Identifying important data attributes. Example: Extracting edges from images. Model training: Role: Teaching the model using training data. Example: Using a dataset to train a neural network. Model evaluation: Role: Assessing the model's performance. Example: Measuring accuracy, precision, and recall. Run-length encoding: What it is: A simple compression algorithm that replaces sequences of the same data value with a single value and a count. Example: Compressing the string "AAAABBBCCDAA" as "4A3B2C1D2A". 5. Software and operating systems Operating system components: System utilities: Role: Perform system maintenance tasks. Example: Disk clean-up tools. Memory manager: Role: Manages memory allocation and deallocation. Example: Allocating memory to different applications. Kernel: Role: The core part of the operating system that manages system resources. Example: Handling system calls. Process scheduler: Role: Manages the execution of processes. Example: Allocating CPU time to different tasks. Security threats: Viruses: What it is: Malicious software that replicates and spreads. Example: A virus that deletes files. Phishing: What it is: Fraudulent attempts to obtain sensitive information. Example: Emails that trick users into revealing passwords. DDoS Attacks: What it is: Overloading a system with traffic to disrupt services. Example: Flooding a website with requests to make it unavailable. Semaphores: What it is: Synchronisation tools used to control access to shared resources in concurrent programming. Role: Prevents race conditions by ensuring that only one process accesses a resource at a time. 6. Practical applications and real-world scenarios GPS navigation: Components: Satellite signals, maps, and algorithms. Role: Determine the best route from one location to another. Example: Using GPS on a smartphone to find directions. Online shopping: Components: Web servers, databases, payment systems, and logistics. Process: From selecting items to payment and delivery. Example: Buying a book from an online store. Face recognition: Process: Detecting and identifying faces in photos using machine learning algorithms. Example: Tagging friends in social media photos. Taking quizzes on platforms: Components: Data transfer, storage, and processing. Process: From answering questions to receiving results. Example: Taking a quiz on Coursera. Video game controllers: Process: Input from a joystick leading to action on screen. Components: Controller, console, and display. Example: Moving a character in a video game. 7. Other key concepts ASCII and Unicode: ASCII: What it is: A character encoding standard for text. Example: The letter 'A' is represented as 65 in ASCII. Unicode: What it is: A character encoding standard that includes characters from all writing systems. Example: The letter 'A' is represented as U+0041 in Unicode. System bus: What it is: A communication system that transfers data between components of a computer. Role: Connects the CPU, memory, and other hardware. Example: Transferring data from the CPU to RAM. Deadlock: What it is: A situation where two or more processes are unable to proceed because each is waiting for the other to release resources. Causes: Circular wait, hold and wait, no pre-emption, mutual exclusion. How to resolve: Deadlock detection and recovery, deadlock avoidance, deadlock prevention. URL components: What it is: Uniform resource Llocator, the address of a web resource. Parts: Protocol: e.g., http:// Domain Name: e.g., www.example.com Path: e.g., /products/search.php Query String: e.g., ?colour=black&size=12 Role: Used in networking and web servers to locate and access resources. Video: Video Course summary . Duration: 4 minutes 4 min Practice Assignment: Revision Quiz 1 . Duration: 30 minutes 30 min Discussion Prompt: Notional machine of an application . Duration: 30 minutes 30 min Discussion Prompt: Test each other . Duration: 30 minutes 30 min Practice Assignment: Revision Quiz 2 . Duration: 30 minutes 30 min Discussion Prompt: Notional machine for a website . Duration: 30 minutes 30 min Practice Assignment: Revision Quiz 3 Graded Assignment: Revision Quiz 4 Reading: Reading Example exam papers . Duration: 2 hours 2h Ungraded Plugin: CPU EXAMPLE . Duration: 15 minutes 15 min Reading: Reading Final exam key concepts checklist . Duration: 10 minutes 10 min Reading: Reading Final exam key concepts review . Duration: 10 minutes 10 min Practice Assignment: Practice final exam . Duration: 1 hour 1h Final exam key concepts review The final exam consists of multiple parts with short and longer questions for the computer science concepts introduced in this course. For the questions requiring discussion, explaining and evaluation, ensure to ask yourself some of the following questions: Does the answer describe an appropriate range of computer science concepts from this course? Does the answer illustrate the concepts with a suitable example? Does the answer explain how the computer system or data format works? Does the answer predict how different technical choices or situations affect the system? The following resource provides a review of the key concepts, skills and knowledge you will need to successfully pass the final exam. 1. Data representation and transmission Bit patterns: What it is: The way data is represented in computers using binary digits (0s and 1s). Example: The letter 'A' is represented as 01000001 in ASCII. Why it matters: Essential for understanding how data is stored and processed in computers. Compression techniques: Lossy compression: What it is: Reduces file size by removing some data, often leading to a loss of quality. Example: JPEG images where fine details are lost to reduce file size. When to use it: Suitable for multimedia files where perfect accuracy is not required. Lossless compression: What it is: Reduces file size without losing any data. Example: PNG images and ZIP files. When to use it: Important when you need to retain all original data. Memory types: Registers: What it is: Small, fast storage locations within the CPU. Role: Temporarily holds data that the CPU is currently working on. Random access memory (RAM): What it is: Volatile memory used as the main memory for temporary data storage. Role: Stores data and instructions that the CPU needs while performing tasks. Hard disks: What it is: Non-volatile storage devices used for long-term data storage. Role: Store operating systems, software applications, and user data. Machine instructions: What they are: Basic commands that tell the CPU to perform specific tasks. Examples: LOAD: Reads data from memory. STORE: Writes data to memory. ADD: Performs arithmetic operations. JUMP: Alters the flow of execution. 2. Computer architecture and hardware CPU Components: Arithmetic logic unit (ALU): Role: Performs arithmetic and logical operations. Example: Adding two numbers or comparing values. Control unit: Role: Directs the operation of the processor by coordinating how data moves through the CPU. Example: Fetching instructions from memory, decoding them, and executing them. Registers: Role: Small, fast storage locations within the CPU. Example: Holding intermediate results of computations. Memory hierarchy: Registers: Closest to the CPU, very fast but small in size. Cache: Small, fast memory located near the CPU, used to store frequently accessed data. RAM: Larger and slower than cache, used for temporary storage of data and instructions. Hard disks: Much larger and slower, used for long-term storage. File formats: Uncompressed: Example: BMP images. When to use it: Stores data without any compression, resulting in large file sizes. Lossless compressed: Example: PNG images, ZIP files. When to use it: Compresses data without losing any information, suitable for text and images where quality is important. Lossy compressed: Example: JPEG images, MP3 audio files. When to use it: Compresses data by removing some information, suitable for multimedia where some loss of quality is acceptable. 3. Networking and communication IP Addresses: What it is: Unique numerical labels assigned to devices on a network. Role: Identifies devices to facilitate communication over a network. Example: 192.168.1.1 Network protocols: Application layer: Role: Interfaces with the end user. Example: HTTP, FTP. Transport layer: Role: Ensures complete data transfer. Example: TCP, UDP. Network layer: Role: Routes data packets. Example: IP. Link layer: Role: Handles physical data transfer. Example: Ethernet. Network types: Personal area network (PAN): What it is: Small networks for personal devices. Example: Bluetooth. Local area network (LAN): What it is: Networks covering limited areas like offices. Example: Ethernet, Wi-Fi. Wide area network (WAN): What it is: Networks covering large geographical areas. Example: The internet. Web server components: Databases: Role: Store and manage data for web applications. Example: SQL databases like MySQL. Web servers: Role: Serve web pages to clients. Example: Apache, Nginx. 4. Machine learning and algorithms Machine learning classification: What it is: A type of machine learning that categorises data into predefined classes. Example: Email spam detection. Machine learning project steps: Data collection: Role: Gathering relevant data for training the model. Example: Collecting images for an image recognition project. Feature extraction: Role: Identifying important data attributes. Example: Extracting edges from images. Model training: Role: Teaching the model using training data. Example: Using a dataset to train a neural network. Model evaluation: Role: Assessing the model's performance. Example: Measuring accuracy, precision, and recall. Run-length encoding: What it is: A simple compression algorithm that replaces sequences of the same data value with a single value and a count. Example: Compressing the string "AAAABBBCCDAA" as "4A3B2C1D2A". 5. Software and operating systems Operating system components: System utilities: Role: Perform system maintenance tasks. Example: Disk clean-up tools. Memory manager: Role: Manages memory allocation and deallocation. Example: Allocating memory to different applications. Kernel: Role: The core part of the operating system that manages system resources. Example: Handling system calls. Process scheduler: Role: Manages the execution of processes. Example: Allocating CPU time to different tasks. Security threats: Viruses: What it is: Malicious software that replicates and spreads. Example: A virus that deletes files. Phishing: What it is: Fraudulent attempts to obtain sensitive information. Example: Emails that trick users into revealing passwords. DDoS Attacks: What it is: Overloading a system with traffic to disrupt services. Example: Flooding a website with requests to make it unavailable. Semaphores: What it is: Synchronisation tools used to control access to shared resources in concurrent programming. Role: Prevents race conditions by ensuring that only one process accesses a resource at a time. 6. Practical applications and real-world scenarios GPS navigation: Components: Satellite signals, maps, and algorithms. Role: Determine the best route from one location to another. Example: Using GPS on a smartphone to find directions. Online shopping: Components: Web servers, databases, payment systems, and logistics. Process: From selecting items to payment and delivery. Example: Buying a book from an online store. Face recognition: Process: Detecting and identifying faces in photos using machine learning algorithms. Example: Tagging friends in social media photos. Taking quizzes on platforms: Components: Data transfer, storage, and processing. Process: From answering questions to receiving results. Example: Taking a quiz on Coursera. Video game controllers: Process: Input from a joystick leading to action on screen. Components: Controller, console, and display. Example: Moving a character in a video game. 7. Other key concepts ASCII and Unicode: ASCII: What it is: A character encoding standard for text. Example: The letter 'A' is represented as 65 in ASCII. Unicode: What it is: A character encoding standard that includes characters from all writing systems. Example: The letter 'A' is represented as U+0041 in Unicode. System bus: What it is: A communication system that transfers data between components of a computer. Role: Connects the CPU, memory, and other hardware. Example: Transferring data from the CPU to RAM. Deadlock: What it is: A situation where two or more processes are unable to proceed because each is waiting for the other to release resources. Causes: Circular wait, hold and wait, no pre-emption, mutual exclusion. How to resolve: Deadlock detection and recovery, deadlock avoidance, deadlock prevention. URL components: What it is: Uniform resource Llocator, the address of a web resource. Parts: Protocol: e.g., http:// Domain Name: e.g., www.example.com Path: e.g., /products/search.php Query String: e.g., ?colour=black&size=12 Role: Used in networking and web servers to locate and access resources. Mark as completed Dislike Report an issue
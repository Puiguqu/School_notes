# This: making objects refer to themselves
Videoâ€¢
. Duration: 10 minutes
10 min

URL: https://www.coursera.org/learn/uol-introduction-to-programming-1/lecture/z6HHH/this-making-objects-refer-to-themselves

## VIDEO TRANSCRIPT ## You may navigate through the transcript using tab. To save a note for a section of text press CTRL + S. To expand your selection you may use CTRL + arrow key. You may contract your selection using shift + CTRL + arrow key. For screen readers that are incompatible with using arrow keys for shortcuts, you can replace them with the H J K L keys. Some screen readers may require using CTRL in conjunction with the alt key In the last video, we started to look at adding functions into our objects, as well as properties. This is allowed us to neaten up our code a lot and right objects that better encapsulate the idea about a certain thing and from the real world. We aren't quite done yet. In the last video I promised that I would show you how to access the properties of your objects from within the methods. In JavaScript, there is a special keyword which allows us to access the properties of an object from within itself. It's called this. When we create an object with properties and functions, we will probably want to access the properties from within the functions we create. We do this using the this keyword. While that particular object's code is running, this will point to the object and we can use it with the property name to get other value inside. This can be quite a confusing topic and idea to get your head around. We'll take it slowly, and hopefully you'll see how it works. But don't be frightened to watch this video more than once. Right, let's get straight into a code example and look at how this works in practice. So I've got here a simple sketch, which has just got a MyRect object. And MyRect has some properties for its x, its y, its width, and its height. What I want to add to this is a function that will draw MyRect to the Canvas. So we need to add in a method, and we will call this method, let's call it draw rect. And its function, we don't need any parameters, and let's open the braces to start the body of the code. So if I wanted to draw this rectangle, which we're going to start with rect, you may be thinking, okay, I just need to do my myRect.x and so on. That's not going to work. What we need to do is rather than using the name of the object, we use this keyword. So this is saying to JavaScript, I want the x property of this object. And then with this.y, this.width, and this.height. Okay, semi colon at the end, and save that. So we've now created a method inside the myRect function. We now just need to call it somewhere else. So let's do myRect.draw.Rect. Let's set a nice a color for it. So let's set the Phil. Let's be a shade of green. Okay, let's run that and there we go. We've now displayed that rectangle to the canvas. If I update any of these properties, let's make that 200 by 300, the other way around, and say that it's going to change those values, as you would expect, to draw out to the Canvas. Okay, now let's look at a slightly more complicated example that's going to go into these ideas in a bit more detail. Okay, so let's go back to the rocket ship example that we had a few topics back. And I can control my rocket ship with the, whoops. Let's actually put that in the right window, with the w key. And the d key and the a key to move it left and right and it falls back down to earth when the thrusters switch off. So if you have a look at this code, you can see that I've got quite a lot of mess inside of my draw function. And I want to neatly set up, put all that drawing code into the rocket ship object, because that's a better place for it. It's about the rocket ship, we want to encapsulate all those ideas about it in one place. So if we start by creating a method inside of this object, that method's going to be called drawRocket colon. So we're saying that's the key, now we need the value, and that value is going to be a function. We're not going to have any parameters. And let's start our function body. And all we have to do is if we take the code that we used to draw the rocket, if we, oops, try and just copy those bits, And we can cut from here, so big dramatic change. And let's pop that inside the function that we've just created, the method we've just created inside Rocket Ship. And that then would draw our rocket ship except it won't quite because if you look here we've got rocket.x, rocket.y. We need to change these to the this pointer. And here find and replace in your code will help you out a lot. So if we select Find and Replace from the menu. And let's just make sure my cursor's just before the first one, let's do that again. Find, Replace, let's search for rocket, and let's replace with this. So we can just go through these one by one and change them to the list pointer. Almost there, last couple. Excellent, okay, so we've now got a method that hopefully should work. We're looking a little bit disorganized. At the moment, things are not that well lined up. It's really important that you try and line things up neatly, and you can come and do back and do this yourself. You've got a bit more time than I have. So the only other thing we need to do is now actually draw this rocket out to the canvas. So we want to do rocket.drawRocket and if we can place parentheses and kindfully now we run it again. We've got our rocket ship back where it belongs on the bottom of the canvas. And is still works just the same. So we massively reduce the amount of cold inside our draw function, but there is still more we can do. This code here that's handling how the rocket ship should move based on the key presses, let's also put that into a method of this object. So this is where things going to little bit tricky when you're not very lined up. So brackets I think it's that bracket there, it's highlighted in line 50. Let's see if that's the right one. So that should be, yeah, the start of the function. So that's the end of our method that we've just created for drawing it. So we need another comma because we're going to put a new key value pair into this object so a new method. And we'll call this one moveRockets. And again, this is a function which isn't going to take any parameters. If you do have parameters, you can access them without this. So I'll do this just as an example. So let's take in just a string here, str, and if we console.log str. So this is just a quick example just to prove the point. We don't need the this keyword, because the parameter doesn't belong to the object. The properties do, but the parameter doesn't. So if I just print that out just so we can see that it does work the way we believe it does so rocket.moveRockets and we'll call or just put in a hello world here. Let's just make sure that all looks right. Yes, I think it does. So if we save that, we have a look at the Inspector, Console, yep, it's printing out hello world once every frame. It's just proving the point there. So let's close the app, and we can lose that line because it's not really doing anything important for us. So let's take that out, and let's take this moveRocket code from here. Let's cut it, and let's paste it back up there. And again we just need to use find and replace to make sure that we replace all those whereas referencing the rocket object we're referencing this. So let's find rocket and replace with this. So replace, replace replace. Okay, that's the last one we want to do. And we just need to also, well, we're calling it here. Let's save that and that and yes, my program is working in exactly the same way. But look at how nice and short my draw function is. It's really tiny and that's really how it should be. This should just be setting up and accessing other objects. All the code that relates to the rocket ship is in its own object. ## END TRANSCRIPT ## ## ADDITIONAL PAGE CONTENT ## Lesson 9.1 Methods Video: Video Methods: Objects which can do things . Duration: 8 minutes 8 min Video: Video This: making objects refer to themselves . Duration: 10 minutes 10 min Practice Assignment: Methods . Duration: 15 minutes 15 min Reading: Reading Hack it: Rocket . Duration: 1 hour 1h Discussion Prompt: Rocket . Duration: 20 minutes 20 min Lesson 9.2 p5 vector - static and non-static methods